<?php

/**
 * Implements hook_entity_info_alter().
 */
function user_addressbook_commerce_entity_info_alter(&$info) {
  $info['user_address']['view modes']['user_addressbook_checkout'] = array(
    'label' => t('User addressbook for commerce'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_menu().
 */
function user_addressbook_commerce_menu() {
  $items = array();

  return $items;
}

/**
 * Implements hook_views_api().
 */
function user_addressbook_commerce_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'user_addressbook_commerce') . '/includes/views',
  );
}

/**
 * Implements hook_user_addressbook_address_type_info().
 */
function user_addressbook_commerce_user_addressbook_address_type_info() {
  $user_address_types = array();
  if (user_access('edit own user_address entities')) {
    foreach (commerce_customer_profile_types() as $type => $profile_type) {
      if ($profile_type['addressfield'] || isset($checkout_panes['customer_profile_' . $type])) {
        $user_address_types[$type] = array(
          'type' => $type, 
          'title' => $profile_type['name'], 
        );
      }
    }
  }

  return $user_address_types;
}

/**
 * Implements hook_entity_view().
 *
 * Adds the "edit", "delete" and "set as default" links to the customer profile.
 */
function user_addressbook_commerce_entity_view($entity, $type, $view_mode, $langcode) {
  if ($type == 'user_address' && $view_mode == 'user_addressbook_checkout') {
  }
}

/**
 * Implements hook_commerce_checkout_page_info().
 */
function user_addressbook_commerce_commerce_checkout_page_info() {
  $checkout_pages = array();

  $checkout_pages['addresses'] = array(
    'title' => t('Addresses'),
    'weight' => 0,
  );

  return $checkout_pages;
}

/**
 * Implements hook_commerce_checkout_page_info_alter().
 */
function user_addressbook_commerce_commerce_checkout_page_info_alter(&$checkout_pages) {
  if (user_access('edit own user_address entities')) {
    $checkout_pages['addresses']['buttons'] = FALSE;
  }
}

/**
 * Implements hook_commerce_checkout_pane_info().
 */
function user_addressbook_commerce_commerce_checkout_pane_info() {
  $checkout_panes = array();

  $checkout_panes['user_addressbook'] = array(
    'title' => t('Addresses'),
    'base' => 'user_addressbook_commerce_checkout_pane',
    'file' => 'includes/user_addressbook_commerce.checkout_pane.inc',
    'page' => 'addresses',
    'weight' => 2,
  );

  return $checkout_panes;
}

/**
 * Implements hook_commerce_checkout_pane_info_alter().
 *
 * Use custom pane if the cart summary view has form elements.
 */
function user_addressbook_commerce_commerce_checkout_pane_info_alter(&$checkout_panes) {
  // Extract the View and display keys from the cart contents pane setting.
  foreach (commerce_customer_profile_types() as $type => $profile_type) {
    if ($profile_type['addressfield'] && isset($checkout_panes['customer_profile_' . $type])) {
      if (user_access('edit own user_address entities')) {
        $checkout_panes['customer_profile_' . $type]['enabled'] = FALSE;
        $checkout_panes['customer_profile_' . $type]['page'] = 'disabled';
      }
      else {
        $checkout_panes['customer_profile_' . $type]['enabled'] = TRUE;
        $checkout_panes['customer_profile_' . $type]['page'] = 'addresses';
      }
    }
  }
  if (!user_access('edit own user_address entities')) {
    $checkout_panes['user_addressbook']['enabled'] = FALSE;
    $checkout_panes['user_addressbook']['page'] = 'disabled';
  }
}

/**
 * Helper function.
 *
 * Get the customer profiles panes, keeping the order from checkout settings.
 */
function user_addressbook_commerce_customer_profile_panes() {
  foreach (commerce_customer_profile_types() as $type => $profile) {
    // Only customer profiles with addressfield and checkout pane defined.
    if ($profile['addressfield'] && $pane = reset(commerce_checkout_panes(array('pane_id' => 'customer_profile_' . $type)))) {
      $panes[$type] = $pane;
      $panes[$type]['type'] = $type;
    }
  }
  uasort($panes, 'drupal_sort_weight');
  return $panes;
}

/**
 * Implements hook_i18n_string_list().
 */
function user_addressbook_commerce_i18n_string_list($group) {
  if ($group == 'commerce') {
    // Allow the checkout completion message to be translated.
    $help_text_default = array(
      'value' => '',
      'format' => 'filtered_html',
    );
    foreach ($customer_profile_panes as $type => $customer_profile_pane) {
      // Custom User addressbook pane title.
      $user_addressbook_pane_title = variable_get('commerce_checkout_' . $type . '_user_addressbook_pane_title', $customer_profile_pane['title']);
      $strings['commerce']['checkout']['addresses']['commerce_checkout_' . $type . '_user_addressbook_pane_title'] = $user_addressbook_pane_title;
      // Help text User addressbook pane.
      $user_addressbook_help_text = variable_get('commerce_checkout_' . $type . '_user_addressbook_help_text', $help_text_default);
      $strings['commerce']['checkout']['addresses']['commerce_checkout_' . $type . '_user_addressbook_help_text'] = $user_addressbook_help_text['value'];
      // Help text for add new customer profile form.
      $add_new_customer_profile_help_text = variable_get('commerce_checkout_' . $type . '_add_new_customer_profile_help_text', $help_text_default);
      $strings['commerce']['checkout']['addresses']['commerce_checkout_' . $type . '_add_new_customer_profile_help_text'] = $add_new_customer_profile_help_text['value'];
    }
  }
  return $strings;
}
